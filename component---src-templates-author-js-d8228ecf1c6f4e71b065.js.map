{"version":3,"file":"component---src-templates-author-js-d8228ecf1c6f4e71b065.js","mappings":"0KA2GA,UA9Fe,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACxBC,EAASH,EAAKI,YACdC,EAAQL,EAAKM,aAAaC,MAC1BC,EAAaL,EAAOM,QAAP,uBACUN,EAAOM,QAAQC,QAAQ,KAAvB,IACvB,KACAC,EAAcR,EAAOS,SAAP,4BACcT,EAAOS,SAASF,QAAQ,MAAxB,IAC5B,KAEN,OACI,gCACI,gBAAC,IAAD,CAAUV,KAAMA,EAAMC,SAAUA,EAAUY,KAAK,YAC/C,gBAAC,KAAD,KACI,uBAAKC,UAAU,aACX,0BAAQA,UAAU,iBACd,uBAAKA,UAAU,yBACX,0BAAKX,EAAOY,MACXZ,EAAOa,KAAO,yBAAIb,EAAOa,KAC1B,uBAAKF,UAAU,sBACVX,EAAOc,SACJ,qBACIH,UAAU,qBACVI,KAAMf,EAAOc,QACbE,OAAO,SACPC,IAAI,uBAJR,WASHZ,GACG,qBACIM,UAAU,qBACVI,KAAMV,EACNW,OAAO,SACPC,IAAI,uBAJR,WASHT,GACG,qBACIG,UAAU,qBACVI,KAAMP,EACNQ,OAAO,SACPC,IAAI,uBAJR,cAWZ,uBAAKN,UAAU,uBACVX,EAAOkB,eACJ,uBACIC,IAAKnB,EAAOkB,cACZE,IAAKpB,EAAOY,SAK5B,2BAASD,UAAU,aACdT,EAAMmB,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEP,gBAAC,KAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,GAFvB,KAKf,gBAAC,KAAD,CAAYvB,YAAaA,MAK5C,C","sources":["webpack://gatsby-starter-ghost/./src/templates/author.js"],"sourcesContent":["import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport { Layout, PostCard, Pagination } from \"../components/common\";\r\nimport { MetaData } from \"../components/common/meta\";\r\n\r\n/**\r\n * Author page (/author/:slug)\r\n *\r\n * Loads all posts for the requested author incl. pagination.\r\n *\r\n */\r\nconst Author = ({ data, location, pageContext }) => {\r\n    const author = data.ghostAuthor;\r\n    const posts = data.allGhostPost.edges;\r\n    const twitterUrl = author.twitter\r\n        ? `https://twitter.com/${author.twitter.replace(/^@/, ``)}`\r\n        : null;\r\n    const facebookUrl = author.facebook\r\n        ? `https://www.facebook.com/${author.facebook.replace(/^\\//, ``)}`\r\n        : null;\r\n\r\n    return (\r\n        <>\r\n            <MetaData data={data} location={location} type=\"profile\" />\r\n            <Layout>\r\n                <div className=\"container\">\r\n                    <header className=\"author-header\">\r\n                        <div className=\"author-header-content\">\r\n                            <h1>{author.name}</h1>\r\n                            {author.bio && <p>{author.bio}</p>}\r\n                            <div className=\"author-header-meta\">\r\n                                {author.website && (\r\n                                    <a\r\n                                        className=\"author-header-item\"\r\n                                        href={author.website}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                    >\r\n                                        Website\r\n                                    </a>\r\n                                )}\r\n                                {twitterUrl && (\r\n                                    <a\r\n                                        className=\"author-header-item\"\r\n                                        href={twitterUrl}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                    >\r\n                                        Twitter\r\n                                    </a>\r\n                                )}\r\n                                {facebookUrl && (\r\n                                    <a\r\n                                        className=\"author-header-item\"\r\n                                        href={facebookUrl}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                    >\r\n                                        Facebook\r\n                                    </a>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"author-header-image\">\r\n                            {author.profile_image && (\r\n                                <img\r\n                                    src={author.profile_image}\r\n                                    alt={author.name}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </header>\r\n                    <section className=\"post-feed\">\r\n                        {posts.map(({ node }) => (\r\n                            // The tag below includes the markup for each post - components/common/PostCard.js\r\n                            <PostCard key={node.id} post={node} />\r\n                        ))}\r\n                    </section>\r\n                    <Pagination pageContext={pageContext} />\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    );\r\n};\r\n\r\nAuthor.propTypes = {\r\n    data: PropTypes.shape({\r\n        ghostAuthor: PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            cover_image: PropTypes.string,\r\n            profile_image: PropTypes.string,\r\n            website: PropTypes.string,\r\n            bio: PropTypes.string,\r\n            location: PropTypes.string,\r\n            facebook: PropTypes.string,\r\n            twitter: PropTypes.string,\r\n        }),\r\n        allGhostPost: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    pageContext: PropTypes.object,\r\n};\r\n\r\nexport default Author;\r\n\r\nexport const pageQuery = graphql`\r\n    query GhostAuthorQuery($slug: String!, $limit: Int!, $skip: Int!) {\r\n        ghostAuthor(slug: { eq: $slug }) {\r\n            ...GhostAuthorFields\r\n        }\r\n        allGhostPost(\r\n            sort: { order: DESC, fields: [published_at] }\r\n            filter: { authors: { elemMatch: { slug: { eq: $slug } } } }\r\n            limit: $limit\r\n            skip: $skip\r\n        ) {\r\n            edges {\r\n                node {\r\n                    ...GhostPostFields\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"names":["data","location","pageContext","author","ghostAuthor","posts","allGhostPost","edges","twitterUrl","twitter","replace","facebookUrl","facebook","type","className","name","bio","website","href","target","rel","profile_image","src","alt","map","node","key","id","post"],"sourceRoot":""}