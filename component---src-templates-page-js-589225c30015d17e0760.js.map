{"version":3,"file":"component---src-templates-page-js-589225c30015d17e0760.js","mappings":"oLAoDA,UAtCa,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACZC,EAAOF,EAAKG,UAElB,OACI,gCACI,gBAAC,IAAD,CAAUH,KAAMA,EAAMC,SAAUA,EAAUG,KAAK,YAC/C,gBAAC,IAAD,KACI,yBAAOA,KAAK,YAAZ,GAA2BF,EAAKG,uBAEpC,gBAAC,KAAD,KACI,uBAAKC,UAAU,aACX,2BAASA,UAAU,WACf,sBAAIA,UAAU,iBAAiBJ,EAAKK,OAGpC,2BACID,UAAU,qCACVE,wBAAyB,CAAEC,OAAQP,EAAKQ,WAOnE,C","sources":["webpack://gatsby-starter-ghost/./src/templates/page.js"],"sourcesContent":["import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport { Layout } from \"../components/common\";\r\nimport { MetaData } from \"../components/common/meta\";\r\n\r\n/**\r\n * Single page (/:slug)\r\n *\r\n * This file renders a single page and loads all the content.\r\n *\r\n */\r\nconst Page = ({ data, location }) => {\r\n    const page = data.ghostPage;\r\n\r\n    return (\r\n        <>\r\n            <MetaData data={data} location={location} type=\"website\" />\r\n            <Helmet>\r\n                <style type=\"text/css\">{`${page.codeinjection_styles}`}</style>\r\n            </Helmet>\r\n            <Layout>\r\n                <div className=\"container\">\r\n                    <article className=\"content\">\r\n                        <h1 className=\"content-title\">{page.title}</h1>\r\n\r\n                        {/* The main page content */}\r\n                        <section\r\n                            className=\"content-body load-external-scripts\"\r\n                            dangerouslySetInnerHTML={{ __html: page.html }}\r\n                        />\r\n                    </article>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    );\r\n};\r\n\r\nPage.propTypes = {\r\n    data: PropTypes.shape({\r\n        ghostPage: PropTypes.shape({\r\n            codeinjection_styles: PropTypes.object,\r\n            title: PropTypes.string.isRequired,\r\n            html: PropTypes.string.isRequired,\r\n            feature_image: PropTypes.string,\r\n        }).isRequired,\r\n    }).isRequired,\r\n    location: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Page;\r\n\r\nexport const postQuery = graphql`\r\n    query ($slug: String!) {\r\n        ghostPage(slug: { eq: $slug }) {\r\n            ...GhostPageFields\r\n        }\r\n    }\r\n`;\r\n"],"names":["data","location","page","ghostPage","type","codeinjection_styles","className","title","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}