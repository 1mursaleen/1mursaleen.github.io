{"version":3,"file":"component---src-templates-tag-js-51f1dd6401b43660d070.js","mappings":"0KAqDA,UAxCY,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACrBC,EAAMH,EAAKI,SACXC,EAAQL,EAAKM,aAAaC,MAEhC,OACI,gCACI,gBAAC,IAAD,CAAUP,KAAMA,EAAMC,SAAUA,EAAUO,KAAK,WAC/C,gBAAC,KAAD,KACI,uBAAKC,UAAU,aACX,0BAAQA,UAAU,cACd,0BAAKN,EAAIO,MACRP,EAAIQ,YAAc,yBAAIR,EAAIQ,aAAmB,MAElD,2BAASF,UAAU,aACdJ,EAAMO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEP,gBAAC,KAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,GAFvB,KAKf,gBAAC,KAAD,CAAYX,YAAaA,MAK5C,C","sources":["webpack://gatsby-starter-ghost/./src/templates/tag.js"],"sourcesContent":["import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport { Layout, PostCard, Pagination } from \"../components/common\";\r\nimport { MetaData } from \"../components/common/meta\";\r\n\r\n/**\r\n * Tag page (/tag/:slug)\r\n *\r\n * Loads all posts for the requested tag incl. pagination.\r\n *\r\n */\r\nconst Tag = ({ data, location, pageContext }) => {\r\n    const tag = data.ghostTag;\r\n    const posts = data.allGhostPost.edges;\r\n\r\n    return (\r\n        <>\r\n            <MetaData data={data} location={location} type=\"series\" />\r\n            <Layout>\r\n                <div className=\"container\">\r\n                    <header className=\"tag-header\">\r\n                        <h1>{tag.name}</h1>\r\n                        {tag.description ? <p>{tag.description}</p> : null}\r\n                    </header>\r\n                    <section className=\"post-feed\">\r\n                        {posts.map(({ node }) => (\r\n                            // The tag below includes the markup for each post - components/common/PostCard.js\r\n                            <PostCard key={node.id} post={node} />\r\n                        ))}\r\n                    </section>\r\n                    <Pagination pageContext={pageContext} />\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    );\r\n};\r\n\r\nTag.propTypes = {\r\n    data: PropTypes.shape({\r\n        ghostTag: PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            description: PropTypes.string,\r\n        }),\r\n        allGhostPost: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    pageContext: PropTypes.object,\r\n};\r\n\r\nexport default Tag;\r\n\r\nexport const pageQuery = graphql`\r\n    query GhostTagQuery($slug: String!, $limit: Int!, $skip: Int!) {\r\n        ghostTag(slug: { eq: $slug }) {\r\n            ...GhostTagFields\r\n        }\r\n        allGhostPost(\r\n            sort: { order: DESC, fields: [published_at] }\r\n            filter: { tags: { elemMatch: { slug: { eq: $slug } } } }\r\n            limit: $limit\r\n            skip: $skip\r\n        ) {\r\n            edges {\r\n                node {\r\n                    ...GhostPostFields\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"names":["data","location","pageContext","tag","ghostTag","posts","allGhostPost","edges","type","className","name","description","map","node","key","id","post"],"sourceRoot":""}